###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2007-2020  IPFire Team  <info@ipfire.org>                     #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

###############################################################################
# Definitions
###############################################################################

include Config

VER        = 2.35.1

THISAPP    = binutils-$(VER)
DL_FILE    = $(THISAPP).tar.xz
DL_FROM    = $(URL_IPFIRE)
DIR_APP    = $(DIR_SRC)/$(THISAPP)

# Normal build or $(TOOLS_DIR) build.
#
ifeq "$(ROOT)" ""
  TARGET = $(DIR_INFO)/$(THISAPP)
  EXTRA_CONFIG = \
	--prefix=/usr \
	--enable-shared \
	--with-system-zlib \
	--enable-plugins \
	--enable-ld=default \
	--disable-gold
  EXTRA_MAKE = tooldir=/usr
  EXTRA_INSTALL = tooldir=/usr
else
ifeq "$(PASS)" "1"
  CFLAGS := $(patsubst -march=%,,$(CFLAGS))
  CFLAGS := $(patsubst -mfpu=%,,$(CFLAGS))
  CFLAGS := $(patsubst -mfloat-abi=%,,$(CFLAGS))
  CFLAGS := $(patsubst -mindirect-branch=%,,$(CFLAGS))
  CFLAGS := $(patsubst -mfunction-return=%,,$(CFLAGS))
  CFLAGS := $(patsubst -fstack-clash-protection,,$(CFLAGS))
  CFLAGS := $(patsubst -fcf-protection,,$(CFLAGS))

  TARGET = $(DIR_INFO)/$(THISAPP)-tools1
  EXTRA_CONFIG = \
	--target=$(CROSSTARGET) \
	--prefix=$(TOOLS_DIR) \
	--with-sysroot=$(ROOT) \
	--with-lib-path=$(TOOLS_DIR)/lib
  EXTRA_MAKE =
  EXTRA_INSTALL = 
else
  TARGET = $(DIR_INFO)/$(THISAPP)-tools2
  EXTRA_ENV = \
	CC="$(CROSSTARGET)-gcc" \
	AR="$(CROSSTARGET)-ar" \
	RANLIB="$(CROSSTARGET)-ranlib"
  EXTRA_CONFIG = \
	--host=$(BUILDTARGET) \
	--build=$(BUILDTARGET) \
	--prefix=$(TOOLS_DIR) \
	--with-lib-path=$(TOOLS_DIR)/lib
  EXTRA_MAKE = 
  EXTRA_INSTALL = 
endif
endif

ifeq "$(BUILD_ARCH)" "armv5tel"
	EXTRA_CONFIG += \
		--with-abi=aapcs-linux \
		--with-float=soft
endif

EXTRA_CONFIG += \
	--disable-werror \
	--enable-64-bit-bfd

###############################################################################
# Top-level Rules
###############################################################################

objects = $(DL_FILE)

$(DL_FILE) = $(DL_FROM)/$(DL_FILE)

$(DL_FILE)_MD5 = 7126f370ffbd46c08fcc5ce7aee2805d

install : $(TARGET)

check : $(patsubst %,$(DIR_CHK)/%,$(objects))

download :$(patsubst %,$(DIR_DL)/%,$(objects))

md5 : $(subst %,%_MD5,$(objects))

###############################################################################
# Downloading, checking, md5sum
###############################################################################

$(patsubst %,$(DIR_CHK)/%,$(objects)) :
	@$(CHECK)

$(patsubst %,$(DIR_DL)/%,$(objects)) :
	@$(LOAD)

$(subst %,%_MD5,$(objects)) :
	@$(MD5)

###############################################################################
# Installation Details
###############################################################################

$(TARGET) : $(patsubst %,$(DIR_DL)/%,$(objects))
	@$(PREBUILD)
	@rm -rf $(DIR_APP) $(DIR_SRC)/binutils-build && cd $(DIR_SRC) && tar axf $(DIR_DL)/$(DL_FILE)
	@mkdir $(DIR_SRC)/binutils-build

	# Prevent installing libiberty to lib64.
	cd $(DIR_APP) && sed -i 's%\(^MULTIOSDIR = \).*%\1 ../lib%' libiberty/Makefile.in

	cd $(DIR_SRC)/binutils-build && $(EXTRA_ENV) $(DIR_APP)/configure $(EXTRA_CONFIG)
	cd $(DIR_SRC)/binutils-build && make $(EXTRA_MAKE) $(MAKETUNING)
	cd $(DIR_SRC)/binutils-build && make $(EXTRA_INSTALL) install
ifeq "$(ROOT)" ""
	cp -v $(DIR_APP)/include/libiberty.h /usr/include
endif

ifeq "$(TOOLCHAIN)" "1"
 ifeq "$(PASS)" "2"
	cd $(DIR_SRC)/binutils-build && make -C ld clean
	cd $(DIR_SRC)/binutils-build && make -C ld LIB_PATH=/usr/lib:/lib
	cd $(DIR_SRC)/binutils-build && cp -v ld/ld-new $(TOOLS_DIR)/bin
 endif
endif

	@rm -rf $(DIR_APP) $(DIR_SRC)/binutils-build
	@$(POSTBUILD)
